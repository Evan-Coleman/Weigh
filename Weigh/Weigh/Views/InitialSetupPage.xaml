<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Weigh.Views.InitialSetupPage"
             xmlns:validation="clr-namespace:Weigh.Validation;assembly=Weigh"
             xmlns:converters="clr-namespace:Weigh.Converters;assembly=Weigh"
             xmlns:localization="clr-namespace:Weigh.Localization;assembly=Weigh"
             xmlns:App="clr-namespace:Weigh;assembly=Weigh"
             xmlns:b="clr-namespace:Weigh.Behaviors"
             Title="{Binding Title}">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:FirstErrorConverter x:Key="FirstErrorConverter" />
            <converters:StringNullOrEmptyBoolConverter x:Key="StringNullOrEmptyBoolConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <StackLayout HorizontalOptions="Center" VerticalOptions="CenterAndExpand"
                 WidthRequest="250">
        <!--
        <Entry Text="{Binding SetupInfo.Name, Mode=TwoWay}" validation:Validation.Errors="{Binding SetupInfo.Errors[Name]}"
               Placeholder="Enter Name Here"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="Name">
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="25" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="{Binding SetupInfo.Errors[Name], Converter={StaticResource FirstErrorConverter}"
               FontSize="Small" TextColor="Red" />
    -->

        <StackLayout Orientation="Horizontal"
                     HorizontalOptions="CenterAndExpand"
                     Padding="0">
            <Label Text="{localization:Translate UnitSwitchMetricLabel}"/>
            <Switch IsToggled="{Binding SettingValsValidated.Units}"
                    x:Name="UnitSwitch"/>
            <Label Text="{localization:Translate UnitSwitchImperialLabel}"/>
        </StackLayout>




        <Entry Text="{Binding SettingValsValidated.Age}}" validation:Validation.Errors="{Binding SettingValsValidated.Errors[Age]}"
               Placeholder="{localization:Translate NameEntryPlaceholder}"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="Age"
               Keyboard="Numeric">
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="3" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="{Binding SettingValsValidated.Errors[Age], Converter={StaticResource FirstErrorConverter}"
               Style="{StaticResource ErrorLabelStyle}"
               IsVisible="{Binding SettingValsValidated.IsDirty[Age]}"/>
        
        <StackLayout Orientation="Horizontal"
                     HorizontalOptions="CenterAndExpand">
            <StackLayout>
                <Entry 
            Text="{Binding SettingValsValidated.HeightMajor, Mode=TwoWay}" validation:Validation.Errors="{Binding SettingValsValidated.Errors[HeightMajor]}"
               Placeholder="{localization:Translate HeightMajorImperialEntryPlaceholder}"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="HeightMajor"
               Keyboard="Numeric">
                    <Entry.Behaviors>
                        <b:EntryLengthValidatorBehavior MaxLength="6" />
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger TargetType="Entry"
                     Binding="{Binding Source={x:Reference UnitSwitch},
                                       Path=IsToggled}"
                     Value="false">
                            <Setter Property="Placeholder" Value="{localization:Translate HeightMajorMetricEntryPlaceholder}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label Text="{Binding SettingValsValidated.Errors[HeightMajor], Converter={StaticResource FirstErrorConverter}"
               Style="{StaticResource ErrorLabelStyle}"
               IsVisible="{Binding SettingValsValidated.IsDirty[HeightMajor]}"/>
            </StackLayout>

            <StackLayout>
                <Entry WidthRequest="50"
            Text="{Binding SettingValsValidated.HeightMinor, Mode=TwoWay}" validation:Validation.Errors="{Binding SettingValsValidated.Errors[HeightMinor]}"
               Placeholder="(in)"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="HeightMinor"
               Keyboard="Numeric"
               IsVisible="{Binding SettingValsValidated.Units}">
                    <Entry.Behaviors>
                        <b:EntryLengthValidatorBehavior MaxLength="2" />
                    </Entry.Behaviors>
                </Entry>
                <Label Text="{Binding SettingValsValidated.Errors[HeightMinor], Converter={StaticResource FirstErrorConverter}"
                       Margin="10,-10,0,-10"
               Style="{StaticResource ErrorLabelStyle}"
               IsVisible="{Binding SettingValsValidated.IsDirty[HeightMinor]}"/>
            </StackLayout>
        </StackLayout>


        <Entry Text="{Binding SettingValsValidated.Weight, Mode=TwoWay}" validation:Validation.Errors="{Binding SettingValsValidated.Errors[Weight]}"
               Placeholder="{localization:Translate WeightImperialEntryPlaceholder}"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="Weight"
               Keyboard="Numeric">
            <Entry.Triggers>
                <DataTrigger TargetType="Entry"
                     Binding="{Binding Source={x:Reference UnitSwitch},
                                       Path=IsToggled}"
                     Value="false">
                    <Setter Property="Placeholder" Value="{localization:Translate WeightMetricEntryPlaceholder}" />
                </DataTrigger>
            </Entry.Triggers>
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="7" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="{Binding SettingValsValidated.Errors[Weight], Converter={StaticResource FirstErrorConverter}"
               Style="{StaticResource ErrorLabelStyle}"
               IsVisible="{Binding SettingValsValidated.IsDirty[Weight]}"/>

        <StackLayout Orientation="Horizontal">
        <Switch IsToggled="{Binding SettingValsValidated.WaistSizeEnabled}" x:Name="EnableWaistSizeSwitch" />
        <Entry Text="{Binding SettingValsValidated.WaistSize, Mode=TwoWay}" validation:Validation.Errors="{Binding SettingValsValidated.Errors[WaistSize]}"
               Placeholder="{localization:Translate WaistSizeImperialEntryPlaceholder}"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="WaistSize"
               Keyboard="Numeric"
               IsEnabled="{Binding Source={x:Reference EnableWaistSizeSwitch}, Path=IsToggled}">
            <Entry.Triggers>
                <DataTrigger TargetType="Entry"
                     Binding="{Binding Source={x:Reference UnitSwitch},
                                       Path=IsToggled}"
                     Value="false">
                    <Setter Property="Placeholder" Value="{localization:Translate WaistSizeMetricEntryPlaceholder}" />
                </DataTrigger>
            </Entry.Triggers>
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="5" />
            </Entry.Behaviors>
        </Entry>
        </StackLayout>
        <Label Text="{Binding SettingValsValidated.Errors[WaistSize], Converter={StaticResource FirstErrorConverter}"
               Style="{StaticResource ErrorLabelStyle}"
               IsVisible="{Binding SettingValsValidated.IsDirty[WaistSize]}"
               Margin="65,0,0,0"/>

        <Picker ItemsSource="{Binding PickerSource}"
                SelectedItem="{Binding SettingValsValidated.PickerSelectedItem}"
                Title="{localization:Translate ActivityLevelLabel}"
                 HorizontalOptions="FillAndExpand"
                WidthRequest="150"/>

        <StackLayout Orientation="Horizontal"
                     HorizontalOptions="CenterAndExpand"
                     Padding="0">
            <Label Text="{localization:Translate MaleGenderSwitchLabel}"/>
            <Switch IsToggled="{Binding SettingValsValidated.Sex}"/>
            <Label Text="{localization:Translate FemaleGenderSwitchLabel}"/>
        </StackLayout>

        <Entry Text="{Binding SettingValsValidated.GoalWeight, Mode=TwoWay}" validation:Validation.Errors="{Binding SettingValsValidated.Errors[GoalWeight]}"
               Placeholder="{localization:Translate GoalWeightImperialEntryPlaceholder}"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="GoalWeight"
               Keyboard="Numeric">
            <Entry.Triggers>
                <DataTrigger TargetType="Entry"
                     Binding="{Binding Source={x:Reference UnitSwitch},
                                       Path=IsToggled}"
                     Value="false">
                    <Setter Property="Placeholder" Value="{localization:Translate GoalWeightMetricEntryPlaceholder}" />
                </DataTrigger>
            </Entry.Triggers>
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="7" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="{Binding SettingValsValidated.Errors[GoalWeight], Converter={StaticResource FirstErrorConverter}"
               Style="{StaticResource ErrorLabelStyle}"
               IsVisible="{Binding SettingValsValidated.IsDirty[GoalWeight]}"/>

        <DatePicker Date="{Binding SettingValsValidated.GoalDate}"
                    MinimumDate="{Binding SettingValsValidated.MinDate}"></DatePicker>



        <Button Text="{localization:Translate SaveLabel}"
                Command="{Binding SaveInfoCommand}"
                WidthRequest="150"/>
    </StackLayout>

</ContentPage>