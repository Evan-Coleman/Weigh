<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Weigh.Views.InitialSetupPage"
             xmlns:validation="clr-namespace:Weigh.Validation;assembly=Weigh"
             xmlns:converters="clr-namespace:Weigh.Converters;assembly=Weigh"
             xmlns:b="clr-namespace:Weigh.Behaviors"
             Title="{Binding Title}">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:FirstErrorConverter x:Key="FirstErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <StackLayout HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand">
        <Entry Text="{Binding SetupInfo.Name, Mode=TwoWay}" validation:Validation.Errors="{Binding SetupInfo.Errors[Name]}"
               Placeholder="Enter Name Here"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="Name">
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="15" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="{Binding SetupInfo.Errors[Name], Converter={StaticResource FirstErrorConverter}"
               FontSize="Small" TextColor="Red" />


        <StackLayout Orientation="Horizontal"
                     HorizontalOptions="CenterAndExpand"
                     Padding="0">
            <Label Text="Male"/>
            <Switch IsToggled="{Binding Sex}"/>
            <Label Text="Female"/>
        </StackLayout>

        <Entry Text="{Binding SetupInfo.Age, Mode=TwoWay}" validation:Validation.Errors="{Binding SetupInfo.Errors[Age]}"
               Placeholder="Enter Age Here"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="Age"
               Keyboard="Numeric">
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="3" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="{Binding SetupInfo.Errors[Age], Converter={StaticResource FirstErrorConverter}"
               FontSize="Small" TextColor="Red" />

        <Entry Text="{Binding SetupInfo.HeightMajor, Mode=TwoWay}" validation:Validation.Errors="{Binding SetupInfo.Errors[HeightMajor]}"
               Placeholder="Enter Height (ft) Here"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="HeightMajor"
               Keyboard="Numeric">
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="6" />
            </Entry.Behaviors>
            <Entry.Triggers>
                <DataTrigger TargetType="Entry"
                     Binding="{Binding Source={x:Reference UnitSwitch},
                                       Path=IsToggled}"
                     Value="false">
                    <Setter Property="Placeholder" Value="Enter Height (cm) Here" />
                </DataTrigger>
            </Entry.Triggers>
        </Entry>
        <Label Text="{Binding SetupInfo.Errors[HeightMajor], Converter={StaticResource FirstErrorConverter}"
               FontSize="Small" TextColor="Red" />

        <Entry Text="{Binding SetupInfo.HeightMinor, Mode=TwoWay}" validation:Validation.Errors="{Binding SetupInfo.Errors[HeightMinor]}"
               Placeholder="Enter Height (in) Here"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="HeightMinor"
               Keyboard="Numeric"
               IsVisible="{Binding SetupInfo.Units}">
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="2" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="{Binding SetupInfo.Errors[HeightMinor], Converter={StaticResource FirstErrorConverter}"
               FontSize="Small" TextColor="Red"
               IsVisible="{Binding SetupInfo.Units}"/>

        
        <Entry Text="{Binding SetupInfo.Weight, Mode=TwoWay}" validation:Validation.Errors="{Binding SetupInfo.Errors[Weight]}"
               Placeholder="Weight (lb)"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="Weight"
               Keyboard="Numeric">
            <Entry.Triggers>
                <DataTrigger TargetType="Entry"
                     Binding="{Binding Source={x:Reference UnitSwitch},
                                       Path=IsToggled}"
                     Value="false">
                    <Setter Property="Placeholder" Value="Weight (kg)" />
                </DataTrigger>
            </Entry.Triggers>
            <Entry.Behaviors>
                <b:EntryLengthValidatorBehavior MaxLength="4" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="{Binding SetupInfo.Errors[Weight], Converter={StaticResource FirstErrorConverter}" FontSize="Small" TextColor="Red" />
        
        <Entry Text="{Binding WaistSize}"
               Placeholder="Waist Size (in)"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="WaistSize"
               Keyboard="Numeric">
            <Entry.Triggers>
                <DataTrigger TargetType="Entry"
                     Binding="{Binding Source={x:Reference UnitSwitch},
                                       Path=IsToggled}"
                     Value="false">
                    <Setter Property="Placeholder" Value="Waist Size (cm)" />
                </DataTrigger>
            </Entry.Triggers>
            <Entry.Behaviors>
                <b:NumericValidatorBehavior />
            </Entry.Behaviors>
        </Entry>
        <Picker ItemsSource="{Binding PickerSource}"
                SelectedItem="{Binding PickerSelectedItem}"
                Title="Level of Activity"
                WidthRequest="150"/>

        <Entry Text="{Binding GoalWeight}"
               Placeholder="Goal Weight (lb)"
               Style="{ StaticResource SetupEntryStyle }"
               x:Name="GoalWeight"
               Keyboard="Numeric">
            <Entry.Triggers>
                <DataTrigger TargetType="Entry"
                     Binding="{Binding Source={x:Reference UnitSwitch},
                                       Path=IsToggled}"
                     Value="false">
                    <Setter Property="Placeholder" Value="Goal Weight (kg)" />
                </DataTrigger>
            </Entry.Triggers>
            <Entry.Behaviors>
                <b:NumericValidatorBehavior />
            </Entry.Behaviors>
        </Entry>

        <DatePicker Date="{Binding GoalDate}"
                    MinimumDate="{Binding MinDate}"></DatePicker>


        <StackLayout Orientation="Horizontal"
                     HorizontalOptions="CenterAndExpand"
                     Padding="0">
            <Label Text="Metric"/>
            <Switch IsToggled="{Binding SetupInfo.Units}"
                    x:Name="UnitSwitch"/>
            <Label Text="Imperial"/>
        </StackLayout>
        <Button Text="Save"
                Command="{Binding SaveInfoCommand}"
                WidthRequest="150">
            <Button.Triggers>
                <DataTrigger TargetType="Button"
                     Binding="{Binding Source={x:Reference Age},
                                       Path=TextColor}"
                     Value="Color.Red">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger TargetType="Button"
                     Binding="{Binding Source={x:Reference HeightMajor},
                                       Path=TextColor}"
                     Value="Color.Red">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger TargetType="Button"
                     Binding="{Binding Source={x:Reference HeightMinor},
                                       Path=TextColor}"
                     Value="Color.Red">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger TargetType="Button"
                     Binding="{Binding Source={x:Reference Weight},
                                       Path=TextColor}"
                     Value="Color.Red">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Button.Triggers>

        </Button>
    </StackLayout>

</ContentPage>