<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivityLevelLabel" xml:space="preserve">
    <value>Level of Activity</value>
    <comment>Title of activity picker</comment>
  </data>
  <data name="BMILabel" xml:space="preserve">
    <value>BMI - </value>
    <comment>Shows BMI</comment>
  </data>
  <data name="BMRLabel" xml:space="preserve">
    <value>BMR (Calories/Day)</value>
    <comment>Shows BMR</comment>
  </data>
  <data name="CaloriesToLoseWeightLabel" xml:space="preserve">
    <value>Cal/Day to lose weight</value>
    <comment>Cals to lose weight</comment>
  </data>
  <data name="CaloriesToMaintainWeightLabel" xml:space="preserve">
    <value> Cal/Day to maintain weight</value>
    <comment>Cals to maintain weight</comment>
  </data>
  <data name="DateLabel" xml:space="preserve">
    <value>Date: </value>
    <comment>Shows date</comment>
  </data>
  <data name="DaysUntilGoalLabel" xml:space="preserve">
    <value>Days left until goal = </value>
    <comment>Days until goal</comment>
  </data>
  <data name="EnableEditSwitchLabel" xml:space="preserve">
    <value>Enable Editing of info:</value>
    <comment>Switch to enable editing</comment>
  </data>
  <data name="FemaleGenderSwitchLabel" xml:space="preserve">
    <value>Female</value>
    <comment>Female indicator for switch</comment>
  </data>
  <data name="FormValidationPopupLabel" xml:space="preserve">
    <value>Please fill in all forms!</value>
    <comment>Popup label if all forms aren't filled in correctly</comment>
  </data>
  <data name="GoalDateLabel" xml:space="preserve">
    <value>Goal Date</value>
    <comment>Date of the selected goal</comment>
  </data>
  <data name="GoalWeightImperialEntryPlaceholder" xml:space="preserve">
    <value>Goal Weight (lb)</value>
    <comment>If user set units to imperial, lets them know to enter their goal weight in pounds</comment>
  </data>
  <data name="GoalWeightLabel" xml:space="preserve">
    <value>Goal Weight</value>
    <comment>Goal weight</comment>
  </data>
  <data name="GoalWeightMetricEntryPlaceholder" xml:space="preserve">
    <value>Goal Weight (kg)</value>
    <comment>If user set units to metric, lets them know to enter their goal weight in kilograms</comment>
  </data>
  <data name="GraphPageTitle" xml:space="preserve">
    <value>Graph Page</value>
    <comment>GraphPage Title</comment>
  </data>
  <data name="HeavyActivityPickItem" xml:space="preserve">
    <value>Heavy Exercise</value>
    <comment>Picker item for heavy activity</comment>
  </data>
  <data name="HeightMajorImperialEntryPlaceholder" xml:space="preserve">
    <value>Enter Height (ft) Here</value>
    <comment>If user set units to imperial, lets them know to enter their height in feet</comment>
  </data>
  <data name="HeightMajorMetricEntryPlaceholder" xml:space="preserve">
    <value>Enter Height (cm) Here</value>
    <comment>If user set units to metric, lets them know to enter their height in centimeters</comment>
  </data>
  <data name="HeightMinorImperialEntryPlaceholder" xml:space="preserve">
    <value>(in)</value>
    <comment>lets user know to enter their height in inches</comment>
  </data>
  <data name="InitialSetupPageTitle" xml:space="preserve">
    <value>Setup</value>
    <comment>InitialSetupPage Title</comment>
  </data>
  <data name="LightActivityPickItem" xml:space="preserve">
    <value>Light Exercise</value>
    <comment>Picker item for light activity</comment>
  </data>
  <data name="LowActivityPickItem" xml:space="preserve">
    <value>No Exercise</value>
    <comment>Picker item for low activity</comment>
  </data>
  <data name="MainPageTitle" xml:space="preserve">
    <value>Main Page</value>
    <comment>MainPage Title</comment>
  </data>
  <data name="MaleGenderSwitchLabel" xml:space="preserve">
    <value>Male</value>
    <comment>Male indicator for switch</comment>
  </data>
  <data name="MediumActivityPickItem" xml:space="preserve">
    <value>Moderate Exercise</value>
    <comment>Picker item for medium activity</comment>
  </data>
  <data name="NameEntryPlaceholder" xml:space="preserve">
    <value>Enter Age Here</value>
    <comment>Lets user know to enter their name there</comment>
  </data>
  <data name="NormalWeightLabel" xml:space="preserve">
    <value>Normal</value>
    <comment>Label on the BMI gague to show normal weight</comment>
  </data>
  <data name="ObeseLabel" xml:space="preserve">
    <value>Obese</value>
    <comment>Label on the BMI gague to show obese</comment>
  </data>
  <data name="OverweightLabel" xml:space="preserve">
    <value>Overweight</value>
    <comment>Label on the BMI gague to show overweight</comment>
  </data>
  <data name="RemainingWeightToLoseLabel" xml:space="preserve">
    <value> Weight left to lose</value>
    <comment>Weight left to lose</comment>
  </data>
  <data name="SaveLabel" xml:space="preserve">
    <value>Save</value>
    <comment>Save button</comment>
  </data>
  <data name="TotalWeightLostLabel" xml:space="preserve">
    <value>Weight lost to date: </value>
    <comment>Lets user know how much weight they have lost since starting the app</comment>
  </data>
  <data name="UnderWeightLabel" xml:space="preserve">
    <value>Underweight</value>
    <comment>Label on the BMI gague to show underweight</comment>
  </data>
  <data name="UnitSwitchImperialLabel" xml:space="preserve">
    <value>Imperial</value>
    <comment>Shows next to switch that changes units used from imperial/metric</comment>
  </data>
  <data name="UnitSwitchMetricLabel" xml:space="preserve">
    <value>Metric</value>
    <comment>Shows next to switch that changes units used from imperial/metric</comment>
  </data>
  <data name="WaistSizeImperialEntryPlaceholder" xml:space="preserve">
    <value>Waist Size (in)</value>
    <comment>If user set units to imperial, lets them know to enter their waist size in inches</comment>
  </data>
  <data name="WaistSizeMetricEntryPlaceholder" xml:space="preserve">
    <value>Waist Size (cm)</value>
    <comment>If user set units to metric, lets them know to enter their waist size in centimeters</comment>
  </data>
  <data name="WeightDeltaLabel" xml:space="preserve">
    <value>Change from last entry: </value>
    <comment>Shows weight change from last entry</comment>
  </data>
  <data name="WeightImperialEntryPlaceholder" xml:space="preserve">
    <value>Weight (lb)</value>
    <comment>If user set units to imperial, lets them know to enter their weight in pounds</comment>
  </data>
  <data name="WeightLabel" xml:space="preserve">
    <value>Weight</value>
    <comment>Shows weight</comment>
  </data>
  <data name="WeightMetricEntryPlaceholder" xml:space="preserve">
    <value>Weight (kg)</value>
    <comment>If user set units to metric, lets them know to enter their weight in kilograms</comment>
  </data>
</root>